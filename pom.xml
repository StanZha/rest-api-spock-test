<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.2.RELEASE</version>
        <relativePath/>
    </parent>

    <groupId>stupid.simple</groupId>
    <artifactId>rest-api-spock-test</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>rest-api-spock-test</name>
    <description>Testing rest api with Spock framework</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <java.version>1.8</java.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-bom</artifactId>
                <version>2.0-M1-groovy-2.5</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-spring</artifactId>
            <scope>test</scope>
        </dependency>


        <!--        <dependency> &lt;!&ndash; enables mocking of classes (in addition to interfaces) &ndash;&gt;-->
        <!--            <groupId>net.bytebuddy</groupId>-->
        <!--            <artifactId>byte-buddy</artifactId>-->
        <!--            <version>1.6.5</version>-->
        <!--            <scope>test</scope>-->
        <!--        </dependency>-->
        <!--        <dependency> &lt;!&ndash; enables mocking of classes without default constructor (together with-->
        <!--        CGLIB) &ndash;&gt;-->
        <!--            <groupId>org.objenesis</groupId>-->
        <!--            <artifactId>objenesis</artifactId>-->
        <!--            <version>2.5.1</version>-->
        <!--            <scope>test</scope>-->
        <!--        </dependency>-->

    </dependencies>


    <build>
        <plugins>

            <!--            Plugin below will integrate Groovy into Maven lifecycle-->
            <!--            https://groovy.github.io/GMavenPlus/-->
            <!--            this plugin needed to compile groovy classes: https://www.testwithspring.com/lesson/running-unit-tests-with-maven-spock-edition/-->
            <!--            without this plugin test stage will be executed just fine and if no compiled groovy classes presented, no tests will be identified and stage will be executed successfully with 0 tests executed during mvn test-->
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>1.8.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compileTests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--            Plugin below will add groovy tests execution in maven test lifecycle stage if they are compiled with gmavenplus-plugin first-->
            <!--            https://semaphoreci.com/community/tutorials/stubbing-and-mocking-in-java-with-the-spock-testing-framework-->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M4</version>
                <configuration>
                    <useFile>false</useFile>
                    <includes>
                        <include>**/*Spec.java</include>
                        <include>**/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
